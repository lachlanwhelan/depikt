{"version":3,"sources":["Authentication.js","components/ProtectedRoute.js","components/home/navbar/Searchbar.js","components/home/navbar/LogoutBtn.js","components/home/navbar/Navbar.js","components/home/upload/UploadForm.js","components/home/upload/Upload.js","components/home/images/Images.js","components/home/profile/Profile.js","components/home/Favourites/Favourites.js","components/home/Home.js","components/Signin/Signin.js","components/Register/Register.js","App.js","index.js"],"names":["this","authenticated","user","id","name","email","password","fetch","method","headers","body","JSON","stringify","toLowerCase","response","json","userObject","status","Promise","resolve","cb","ProtectedRoute","Component","component","rest","render","props","auth","isAuthenticated","to","pathname","state","from","location","Searchbar","handleSearch","handleChange","handleKeyPress","history","useHistory","className","action","onSubmit","e","preventDefault","type","placeholder","onChange","onKeyPress","onClick","push","icon","faSearch","size","LogoutBtn","localStorage","setItem","logout","Navbar","searchInput","event","setState","target","value","key","replace","faHome","reload","faPlus","faUser","handleMenuClick","menu","UploadForm","handleSubmit","handleFileChange","url","isValid","loading","defaultValue","hidden","accept","src","alt","required","Upload","reader","FileReader","file","files","onloadend","selectedFile","result","imageCompression","maxSizeMB","maxWidthOrHeight","useWebWorker","then","compressedFile","image","readAsDataURL","catch","err","console","log","message","tag","category","addImage","Images","initialImages","filteredImages","handlePageClick","handleOnImageClick","map","item","index","Profile","deleteImage","Favourites","removeImage","imageUrl","previousElementSibling","newImageList","images","filter","favouriteImages","parse","getItem","length","class","Home","formdata","FormData","append","data","imageUploaded","imageAuthor","handleCancelImage","saveToFavourites","concat","getImages","exact","path","Signin","handleOnChange","handleOnLogin","login","Register","handleOnRegister","validateEmail","register","test","App","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c1745d54.chunk.js","sourcesContent":["\r\nclass Authentication {\r\n    constructor(){\r\n        this.authenticated = false;\r\n        this.user = {\r\n            id: '',\r\n            name: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n/*     async checkUser(){\r\n        const response = await fetch('http://localhost:8000/checkUser', {\r\n            method: 'get',\r\n            headers: new Headers({\r\n            Authorization: `bearer ${localStorage.getItem('token')}`\r\n            })\r\n        })\r\n\r\n        const userObject = await response.json();\r\n\r\n\r\n        this.user.id = userObject.authData.currentUser.id;\r\n        this.user.name = userObject.authData.currentUser.name;\r\n        this.user.email = userObject.authData.currentUser.email;\r\n\r\n        Promise.resolve(this.user);\r\n    } */\r\n\r\n    async register(name, email, password){\r\n        //consider try catch block\r\n        const response = await fetch('https://rocky-earth-38750.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: name.toLowerCase(),\r\n                email: email.toLowerCase(),\r\n                password: password   \r\n            })\r\n        })\r\n\r\n        const userObject = await response.json();\r\n\r\n        if(userObject.status === 200){\r\n            this.user.id = userObject.user.id;\r\n            this.user.name = userObject.user.name;\r\n            this.user.email = userObject.user.email;\r\n            this.authenticated = true;\r\n            Promise.resolve()\r\n        }else{\r\n            this.authenticated = false;\r\n        }\r\n    }\r\n\r\n    \r\n    async login(email, password){\r\n    //async method returns a promise\r\n    //when the async method returns a value, the\r\n    //promise will be resolved with the value.\r\n\r\n    //await allows us to wait for the response of an asynchronous request\r\n    //will return value only after promise is resolved\r\n    //promise has three states: pending, fullfilled + rejected\r\n        const response = await fetch('https://rocky-earth-38750.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n        const userObject = await response.json();\r\n        if (userObject.status === 200) {\r\n            this.user.id = userObject.user.id;\r\n            this.user.name = userObject.user.name;\r\n            this.user.email = userObject.user.email;\r\n            this.authenticated = true;\r\n            //Promise.resolve is a method that returns a promise object\r\n            Promise.resolve(this.user);\r\n        }\r\n        else {\r\n            this.authenticated = false;\r\n        }\r\n    }\r\n\r\n    logout(cb){\r\n        this.authenticated = false;\r\n        this.user.id = '';\r\n        this.user.name = '';\r\n        this.user.email = '';\r\n        cb()\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n}\r\n\r\nexport default new Authentication();","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport auth from '../Authentication';\r\n\r\n//home component gets passed to protected route\r\n//...rest operator gathers any number of args into an array\r\nconst ProtectedRoute = ({component: Component, ...rest}) => {\r\n    return(\r\n        <div>\r\n        {/* spread operator unpacks elements of the array {...rest} = path and component */} \r\n        <Route {...rest} render={\r\n                            (props) => {\r\n                    //check if user is authenticated first\r\n                    if(auth.isAuthenticated()){\r\n                        return <Component {...props} user={auth.user}/>\r\n                    }else{\r\n                    //if not authenticated return Redirect component with signin path\r\n                        return <Redirect to={\r\n                            {\r\n                            pathname: '/',\r\n                            state: {\r\n                                from: props.location\r\n                            }\r\n                            }\r\n                        }/>\r\n                    }\r\n                }\r\n        }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Searchbar = ({handleSearch, handleChange, handleKeyPress}) => {\r\n    const history = useHistory();\r\n    return(\r\n    <form className='searchGroup' action='.' onSubmit={(e) => {e.preventDefault()}}>\r\n        <input className='searchInput' type='text' name='search' id='search-thing' placeholder='search...' onChange={handleChange} onKeyPress={handleKeyPress}/>\r\n        <button className='searchButton' onClick={\r\n            () => {\r\n            handleSearch();\r\n            history.push('/home');\r\n        }}><FontAwesomeIcon icon={faSearch} size='lg'/></button>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport auth from '../../../Authentication';\r\nimport { useHistory} from 'react-router-dom';\r\nimport './Navbar.scss';\r\n\r\nconst LogoutBtn = () => {\r\n    const history = useHistory();\r\n    return(\r\n        <button className='link' onClick={() => {\r\n            localStorage.setItem('authenticated', false);\r\n            auth.logout(\r\n                () => {\r\n                    history.push('/');\r\n                }\r\n            )\r\n        }}>\r\n        Logout\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default LogoutBtn;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Searchbar from './Searchbar';\r\nimport {faHome, faPlus, faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport LogoutBtn from './LogoutBtn';\r\nimport auth from '../../../Authentication';\r\nimport './Navbar.scss';\r\n\r\n\r\n\r\nclass Navbar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = { \r\n            searchInput: ''\r\n        }\r\n    }\r\n\r\n\r\n    handleSearch = () => {\r\n        this.props.handleSearch(this.state.searchInput);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            searchInput: event.target.value\r\n        })\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            this.props.handleSearch(this.state.searchInput);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className='navbar'>\r\n                <Link className='logo' to='/home' replace><FontAwesomeIcon icon={faHome} size='lg' onClick={this.props.reload}/></Link>\r\n                <Searchbar handleSearch={this.handleSearch} handleChange={this.handleChange} handleKeyPress={this.handleKeyPress}/>\r\n                <Link className='uploadLink' to='/home/upload'><FontAwesomeIcon icon={faPlus} size='lg'/></Link>\r\n                <FontAwesomeIcon  className='profileLink' icon={faUser} size='lg' onClick={this.props.handleMenuClick}/>\r\n                <div className='user-menu' id={this.props.menu ? 'dropdown' : ''}>\r\n                <p>{`Hi ${auth.user.name}`}</p>\r\n                    <Link className='link' to='/home' onClick={this.props.reload}>Home</Link>\r\n                    <Link className='link' to='/home/profile'>Profile</Link>\r\n                    <Link className='link' to='/home/favourites'>Favourites</Link>    \r\n                    <LogoutBtn/>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport auth from '../../../Authentication';\r\n\r\n\r\nconst UploadForm = ({handleSubmit, handleFileChange, handleChange, url, isValid, loading}) => {\r\n    return(\r\n        <form className='upload-form' >\r\n        <input name='user' defaultValue={auth.user} hidden/>\r\n        <label className='file'>\r\n            <input\r\n            className='fileUpload' \r\n            type='file'\r\n            name='image'\r\n            accept='image/*'\r\n            onChange={handleFileChange}\r\n            />\r\n            <span className='file-custom'></span>                    \r\n        </label>\r\n\r\n        <div>\r\n            <div className='preview-img'><img src={url}  alt='sample-images'/></div>\r\n        </div>\r\n        \r\n        <div className={isValid ? 'valid' : 'invalid'}>\r\n            Something went wrong with the upload. Please try again.\r\n        </div>\r\n        \r\n        <input type='text' \r\n        name='tag' \r\n        placeholder='#tag' \r\n        onChange={handleChange}\r\n        required\r\n        />\r\n\r\n        <input type='text' \r\n        name='category' \r\n        placeholder='category' \r\n        onChange={handleChange}\r\n        required\r\n        />\r\n\r\n        <input id='btn' className='btn' type='submit' value='Upload' required onClick={(e) => {\r\n            handleSubmit(e);\r\n        }}/>\r\n        <span className={loading ? 'show': 'hide'}>Loading...</span>\r\n\r\n    </form>  \r\n    )\r\n}\r\n\r\nexport default UploadForm;","import React, {Component} from 'react';\r\nimport UploadForm from './UploadForm';\r\nimport imageCompression from 'browser-image-compression';\r\nimport './Upload.scss';\r\n\r\n\r\nclass Upload extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            image: {},\r\n            url: '',\r\n            tag: '',\r\n            category:'',\r\n            isValid: true,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        //create fileReader instance\r\n        let reader = new FileReader();\r\n        //get file\r\n        let file = e.target.files[0];\r\n\r\n        const options = {\r\n            maxSizeMB: 1,\r\n            maxWidthOrHeight: 1920,\r\n            useWebWorker: false\r\n        }\r\n\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                selectedFile:file,\r\n                url: reader.result //returns base64 url\r\n            })\r\n        }\r\n\r\n        imageCompression(file, options)\r\n        .then((compressedFile) => {\r\n            this.setState({\r\n                image: compressedFile\r\n            })\r\n            reader.readAsDataURL(compressedFile);\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message);\r\n            \r\n        }) \r\n    }\r\n\r\n    \r\n    \r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        //prevent form from sending + refreshing page\r\n        e.preventDefault();\r\n        const {url, tag, category} = this.state;\r\n        \r\n        if(!url || !tag || !category){\r\n            this.setState({\r\n                isValid: false\r\n            })\r\n        }else{\r\n            this.setState({\r\n                isValid: true\r\n            })\r\n            this.props.addImage(this.state)\r\n            if(this.state.loading === false){\r\n                this.setState({\r\n                    loading: true\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className='upload-page'>\r\n            <h1>Upload An Image</h1>\r\n            <UploadForm handleSubmit={this.handleSubmit}\r\n             handleChange={this.handleChange}\r\n             handleFileChange={this.handleFileChange} \r\n             url={this.state.url} \r\n             isValid={this.state.isValid}\r\n             loading={this.state.loading}\r\n             />         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Upload;","import React from 'react';\r\nimport './Images.scss';\r\n\r\nconst Images = ({initialImages, filteredImages, handlePageClick, handleOnImageClick}) => {\r\n    if(!filteredImages){\r\n        return(\r\n            \r\n            <div className='image-page' onClick={handlePageClick}>\r\n            <div className='images'>\r\n            {\r\n                initialImages.map((item, index) => {\r\n                        return(\r\n                            <div className='imageItem' key={index}>\r\n                            <img className='image' src={item.url} alt='' onClick={(e) => handleOnImageClick(e, item.name)} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className='image-page'>\r\n            <div className='images'>\r\n            {\r\n                filteredImages.map((item, index) => {\r\n                        return(\r\n                            <div className='imageItem' key={index}>\r\n                            <img className='image' src={item.url} alt=''/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Images;","import React from 'react';\r\nimport './Profile.scss';\r\nimport auth from '../../../Authentication';\r\nconst Profile = ({initialImages, deleteImage}) => { \r\n    return(\r\n        <div className='profile-page'>\r\n            <div className='box-1'>\r\n                <h1>Details</h1>\r\n                <div className='profile-card'>\r\n                    <h3>Id: {auth.user.id}</h3>\r\n                    <h3>Name: {auth.user.name}</h3>\r\n                    <h3>Email: {auth.user.email}</h3>                 \r\n                </div>\r\n            </div>\r\n\r\n            <div className='box-2'>\r\n            <h1>Your uploaded images</h1>\r\n                <div className='image-uploads'>\r\n                {\r\n                    initialImages.map(item => {\r\n                        if(item.name === auth.user.name){\r\n                            return (\r\n                                <div className='image-card' key={item.id}>\r\n                                    <img src={item.url} alt={item.tag} id={item.id}/>\r\n                                    <button className='delete-btn' onClick={() => deleteImage(item)}>Delete</button>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\r\nimport '../Home.scss';\r\n\r\n\r\nclass Favourites extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            images: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    removeImage = (e) => {\r\n        const imageUrl = e.target.previousElementSibling.src;\r\n        const newImageList = this.state.images.filter(item => {\r\n            return item !== imageUrl;\r\n        })\r\n        localStorage.setItem('favourites', JSON.stringify(newImageList));\r\n        \r\n        this.setState({\r\n            images: newImageList\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        const favouriteImages = JSON.parse(localStorage.getItem('favourites'));\r\n        this.setState({\r\n            images: favouriteImages\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if(!this.state.images || this.state.images.length === 0){\r\n            return(\r\n                <div className='fav-page'>\r\n                    <h1 className='favourite-title'>You don't have any favourite pics!</h1>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className='fav-page'>\r\n                <h1 className='favourite-title'>Favourites</h1>\r\n                    <div className='fav-images'>  \r\n                    {\r\n                        this.state.images.map((image, index) => {\r\n                            return(\r\n                                <div class='fav-image-card'>\r\n                                    <img key={index} src={image} alt='FavouriteImage'/>\r\n                                    <button className='remove-btn' onClick={this.removeImage}>Remove</button>\r\n                                </div>\r\n                                \r\n                            )\r\n                        })\r\n                    }  \r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Favourites;","import React, {Component} from 'react';\r\nimport Navbar from './navbar/Navbar';\r\nimport Upload from './upload/Upload';\r\nimport Images from './images/Images';\r\nimport {Route} from 'react-router-dom';\r\nimport Profile from './profile/Profile';\r\nimport auth from '../../Authentication';\r\nimport './Home.scss';\r\nimport Favourites from './Favourites/Favourites';\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            initialImages: [],\r\n            filteredImages: null,\r\n            menu: false,\r\n            imageUploaded: false,\r\n            imageUrl: null,\r\n            imageAuthor: ''\r\n        }\r\n    }\r\n\r\n\r\n    addImage = (image) => {\r\n        //need to send image file with formdata not json\r\n        const formdata = new FormData()\r\n\r\n        formdata.append('blob', image.image, `${image.image.name}`);\r\n        formdata.append('tag', image.tag);\r\n        formdata.append('category', image.category);\r\n        formdata.append('id',auth.user.id);\r\n\r\n        fetch('https://rocky-earth-38750.herokuapp.com/upload', {\r\n            method: 'post',\r\n            body: formdata\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if(data){\r\n                this.setState({\r\n                    imageUploaded: true\r\n                })\r\n                this.props.history.push('/home');\r\n                console.log(this.state.imageUploaded);\r\n            }else{\r\n                console.log(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteImage = (image) => {\r\n        fetch('https://rocky-earth-38750.herokuapp.com/delete', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                id: image.id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(message => {\r\n            console.log(message);\r\n        })\r\n    }\r\n\r\n    handleOnImageClick = (event, name) => {\r\n        this.setState({\r\n            imageUrl: event.target.src,\r\n            imageAuthor: name\r\n        })\r\n    }\r\n\r\n    handleCancelImage = (event) => {\r\n        const className = event.target.className\r\n\r\n        if(className === 'imageClicked' || className === 'cancel btn'){\r\n            this.setState({\r\n                imageUrl: null\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleSearch = (value) => {\r\n        if(value){\r\n            //return images with tags that match search value\r\n            fetch(`https://rocky-earth-38750.herokuapp.com/images/search?q=${value.toLowerCase()}`)\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                this.setState({\r\n                    filteredImages: images\r\n                })\r\n            })  \r\n        }else{\r\n            this.setState({\r\n                filteredImages: null\r\n            })\r\n        }\r\n    }\r\n\r\n    handleMenuClick = () => {\r\n        this.state.menu ? \r\n        this.setState({\r\n            menu: false\r\n        })\r\n        :\r\n        this.setState({\r\n            menu: true\r\n        })\r\n\r\n    }\r\n\r\n    handlePageClick = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    saveToFavourites = () => {\r\n        const images = JSON.parse(localStorage.getItem('favourites'));\r\n\r\n        if(!images){\r\n            localStorage.setItem('favourites', JSON.stringify([this.state.imageUrl]));\r\n            this.props.history.push('/home/favourites')\r\n            this.setState({\r\n                imageUrl: null\r\n            })\r\n        }else{\r\n            const newImageList = images.concat(this.state.imageUrl);\r\n            localStorage.setItem('favourites', JSON.stringify(newImageList));\r\n            this.props.history.push('/home/favourites')\r\n            this.setState({\r\n                imageUrl: null\r\n            })\r\n        }\r\n    }\r\n\r\n    reload = () => {\r\n       this.setState({\r\n        filteredImages: null\r\n       })\r\n    }\r\n\r\n\r\n\r\n    getImages = () => {\r\n        fetch('https://rocky-earth-38750.herokuapp.com/images')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({\r\n                initialImages: [...data]\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    componentDidUpdate(){\r\n        //fetch images and store in state after updates/uploads\r\n        this.getImages();\r\n    }\r\n\r\n    componentDidMount(){\r\n        //fetch images and store in state when mounts\r\n        this.getImages();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='home-page'>\r\n            \r\n            <Navbar handleSearch={this.handleSearch}\r\n             reload={this.reload}\r\n             handleMenuClick={this.handleMenuClick}\r\n             menu={this.state.menu}/>   \r\n\r\n             \r\n            <Route exact path='/home' render={() => \r\n            <Images initialImages={this.state.initialImages}\r\n             filteredImages={this.state.filteredImages}  \r\n             handlePageClick={this.handlePageClick} \r\n             handleOnImageClick={this.handleOnImageClick}/>\r\n             }/>\r\n\r\n            <Route path='/home/upload' render={() =>\r\n             <Upload addImage={this.addImage}/>\r\n             }/>\r\n\r\n            <Route path='/home/profile' render={() => \r\n            <Profile initialImages={this.state.initialImages} deleteImage={this.deleteImage}/>\r\n            }/>\r\n            <div onClick={this.handleCancelImage} className={this.state.imageUrl ? 'imageClicked' : 'hide'}>\r\n            <div className='image-grp'>\r\n                <div className='image-container'>\r\n                <img className='image-display' src={this.state.imageUrl} alt='img'/>\r\n                <span className='author'>Uploaded by {this.state.imageAuthor}</span>\r\n                </div>\r\n                <div className='btn-grp'>\r\n                    <button className='btn' onClick={this.saveToFavourites}>Add To Favourites</button>\r\n                    <button className='cancel btn' onClick={this.handleCancelImage}>Cancel</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <Route path='/home/favourites' component={Favourites}/>\r\n                <span className={this.state.imageUploaded? 'uploaded': 'hide'}>Uploaded!</span>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../Signin/Signin.scss';\r\nimport auth from '../../Authentication';\r\n\r\nclass Signin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            isValid: true // controls simple input validation\r\n        }\r\n    }\r\n    \r\n    \r\n    handleOnChange = (event) => {\r\n    //watch changes for both input fields\r\n    const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            this.handleOnLogin();\r\n        }\r\n    }\r\n    \r\n    handleOnLogin = () => {\r\n    const{email, password} = this.state;\r\n\r\n    if(!email || !password){\r\n        this.setState({\r\n            isValid:false\r\n        })\r\n    }\r\n    else{\r\n        //login is a thenable method because it returns a promise\r\n        auth.login(email, password)\r\n        .then(() => {\r\n            //so use a callback to execute the route push\r\n            if(auth.authenticated){\r\n                this.props.history.push('/home');\r\n            }else{\r\n                this.setState({\r\n                    isValid:false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    }\r\n\r\n    render(){ \r\n        return(\r\n            <div>\r\n                <div className='sign-in'>\r\n                \r\n                <div className='form-wrapper'>\r\n                    <div>\r\n                        <h1 className='depik'>Depikt.</h1>\r\n                        <h3>Share your ideas</h3>\r\n                    </div>\r\n\r\n                    <div className={this.state.isValid? 'valid': 'invalid'}>\r\n                        Your email or password is invalid\r\n                    </div>\r\n                        \r\n                    <div className='signin-form' onKeyPress={this.handleKeyPress}>\r\n                        <input \r\n                        type='email'\r\n                        placeholder='email'\r\n                        onChange={this.handleOnChange}\r\n                        name='email'\r\n                        />\r\n                        <input \r\n                        type='password' \r\n                        placeholder='password'\r\n                        onChange={this.handleOnChange}\r\n                        name='password'\r\n                        />\r\n                        <button \r\n                        className='btn' \r\n                        type='button'\r\n                        onClick={this.handleOnLogin}\r\n                        >Log in</button>\r\n                        <p>OR</p>\r\n                    {/*  <button className='btn' type='button'>Continue With Facebook</button> */}\r\n                    </div>\r\n                    \r\n                    Dont have an account?<Link to='/register'>Register</Link>\r\n                </div>\r\n            \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signin;","import React, {Component} from 'react';\r\nimport '../Register/Register.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport auth from '../../Authentication';\r\n\r\nclass Register extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            isValid: true\r\n        }\r\n    }\r\n    \r\n    \r\n    handleOnChange = (event) => {\r\n    const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n    \r\n    handleOnRegister = () => {\r\n        const{name, email, password} = this.state;\r\n\r\n        if(name || email || password){\r\n            \r\n            if(this.validateEmail(email)){\r\n                auth.register(name, email, password)\r\n                .then(() => {\r\n                    console.log('props');\r\n                    this.props.history.push('./home');\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    isValid:false\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                isValid: false\r\n            })\r\n        }\r\n    }\r\n\r\n    validateEmail = (email) => {\r\n        //use regex - regular expression to test valid emails\r\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n     <div className='sign-in'>\r\n        \r\n        <div className='form-wrapper'>\r\n            <div>\r\n                <h1 className='depik'>Depikt.</h1>\r\n                <h3>Share your ideas</h3>\r\n            </div>\r\n\r\n            <div className={this.state.isValid? 'valid': 'invalid'}>\r\n                    Please fill in all fields correctly\r\n            </div>\r\n                \r\n            <form className='register-form'>\r\n                <input type='text'\r\n                 placeholder='name' \r\n                 name='name' \r\n                 onChange={this.handleOnChange}/>\r\n\r\n                <input type='email'\r\n                 placeholder='email'\r\n                 name='email' \r\n                 onChange={this.handleOnChange}/>\r\n\r\n                <input type='password' \r\n                 placeholder='password'\r\n                 name='password' \r\n                 onChange={this.handleOnChange}/>\r\n\r\n                <button className='btn' type='button' onClick={this.handleOnRegister}>Register</button>\r\n                <p>OR</p>\r\n                {/* <button className='btn' type='button'>Continue With Facebook</button> */}\r\n            </form>\r\n    \r\n            Already a member?<Link to='/'>Log in</Link>\r\n        </div>\r\n    \r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport Home from './components/home/Home';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Switch> {/* switch returns the component only when the path matches*/}\r\n          <Route exact path='/' component={Signin}/> {/*route defines the component to render */}\r\n          <Route path='/register' component={Register}/>\r\n          <ProtectedRoute path='/home' component={Home}/>\r\n          <Route path='*' component={() => '404 Not Found'}/>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nReactDOM.render(<Router basename='/depikt'><App /></Router>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}